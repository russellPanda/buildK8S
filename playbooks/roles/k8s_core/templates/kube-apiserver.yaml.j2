{% macro etcd_servers_for_ipv4() -%}
{% for host in groups['etcd'] -%}{{ etcd_peer_url_scheme }}://{{ host }}:2379{%- if not loop.last -%},{%- endif -%}{%- endfor -%}
{% endmacro -%}
{% macro etcd_servers_for_ipv6() -%}
{% for host in groups['etcd'] -%}{{ etcd_peer_url_scheme }}://[{{ host }}]:2379{%- if not loop.last -%},{%- endif -%}{%- endfor -%}
{% endmacro -%}
kind: Pod
apiVersion: v1
metadata:
  name: kube-apiserver
  namespace: kube-system
  labels:
    component: kube-apiserver
    tier: control-plane
spec:
  volumes:
    - name: certs
      hostPath:
        path: /etc/ssl/certs
    - name: ssl
      hostPath:
        path: /etc/etcd/ssl
    - name: pki
      hostPath:
        path: /etc/kubernetes
    - name: localtime
      hostPath:
        path: /etc/localtime
    - name: logs
      hostPath:
        path: /var/log/apiserver
  containers:
    - name: kube-apiserver
      image: {{ kube_apiserver_image }}:{{ kube_apiserver_image_tag }}
      command:
        - /usr/local/bin/kube-apiserver
        - '--v=0'
        - "--insecure-port=0"
        {% if ip_mod_version == "ipv4" -%}
        - '--service-cluster-ip-range={{ service_ip_range }}'
        {% elif ip_mod_version == "ipv6" -%}
        - '--service-cluster-ip-range={{ service_ipv6_range }}'
        {% endif -%}
        - '--service-account-key-file={{ kube_config_dir }}/pki/ca.pem'
        - '--service-account-lookup'
        - '--client-ca-file={{ kube_config_dir }}/pki/ca.pem'
        - '--tls-cert-file={{ kube_config_dir }}/pki/apiserver.pem'
        - '--tls-private-key-file={{ kube_config_dir }}/pki/apiserver-key.pem'
        - '--secure-port={{ apiserver_src_port }}'
        - '--allow-privileged=true'
        - '--advertise-address={{ inventory_hostname }}'
        - '--kubelet-client-certificate={{ kube_config_dir }}/pki/kubelet-client.pem'
        - '--kubelet-client-key={{ kube_config_dir }}/pki/kubelet-client-key.pem'
        - '--kubelet-certificate-authority={{ kube_config_dir }}/pki/ca.pem'
        - '--profiling=false'
        - '--audit-log-path=/var/log/apiserver/apiserveraudit.log'
        - '--audit-log-maxage=30'
        - '--audit-log-maxbackup=10'
        - '--audit-log-maxsize=100'
        - '--audit-policy-file=/etc/kubernetes/audit-policy.yaml'
        - '--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256'
        - '--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname'
        {% if kubernetes_version == "1.17.2" -%}
        - '--feature-gates=TaintBasedEvictions=false,EvenPodsSpread=true'
        {% endif -%}
        {% if kubernetes_version == "1.18.10" -%}
        - '--feature-gates=EvenPodsSpread=true'
        {% endif -%}
        {% if kubernetes_version == "1.21.1" -%}
        - '--feature-gates=RemoveSelfLink=false'
        {% endif -%}
        {% if kubernetes_version == "1.21.1" -%}
        - '--service-account-issuer=https://kubernetes.default.svc.cluster.local'
        - '--service-account-signing-key-file={{ kube_config_dir }}/pki/ca-key.pem'
        {% endif -%}
        - '--requestheader-client-ca-file={{ kube_config_dir }}/pki/ca.pem'
        - '--proxy-client-cert-file={{ kube_config_dir }}/pki/apiserver.pem'
        - '--proxy-client-key-file={{ kube_config_dir }}/pki/apiserver-key.pem'
        - '--authorization-mode={{ auth_mode }}'
        {% if etcd_peer_url_scheme == 'https' -%}
        - '--etcd-cafile={{ etcd_cert_dir }}/ca.pem'
        - '--etcd-certfile={{ etcd_cert_dir }}/client.pem'
        - '--etcd-keyfile={{ etcd_cert_dir }}/client-key.pem'
        {% endif -%}
        {% if ip_mod_version == "ipv4" -%}
        - '--etcd-servers={{ etcd_servers_for_ipv4() }}'
        {% elif ip_mod_version == "ipv6" -%}
        - '--etcd-servers={{ etcd_servers_for_ipv6() }}'
        {%- endif %}

      resources:
        requests:
          cpu: 250m
      volumeMounts:
        - name: certs
          mountPath: /etc/ssl/certs
        - name: ssl
          readOnly: true
          mountPath: /etc/etcd/ssl/
        - name: pki
          readOnly: true
          mountPath: /etc/kubernetes/
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
        - name: logs
          mountPath: /var/log/apiserver
      livenessProbe:
        tcpSocket:
          port: {{ apiserver_src_port }}
        initialDelaySeconds: 15
        timeoutSeconds: 15
  hostNetwork: true